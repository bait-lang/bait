// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MIT
package time

pub struct Stopwatch{
	mut start u64
	mut end u64
	mut elapsed u64
}

fun perf_now() u64 {
	return #JS.'Math.floor(performance.now())' as u64
}

pub fun (mut w Stopwatch) start() {
	w.start = perf_now()
	w.end = 0 as u64
}

pub fun (mut w Stopwatch) stop() {
	w.end = perf_now()
	w.elapsed += w.end - w.start
}

pub fun (mut w Stopwatch) restart() {
	w.start = perf_now()
	w.end = 0 as u64
	w.elapsed = 0 as u64
}

pub fun (mut w Stopwatch) elapsed() u64 {
	if w.start > 0 as u64 and w.end == 0 as u64 {
		return w.elapsed + (perf_now() - w.start)
	}

	return w.elapsed
}
