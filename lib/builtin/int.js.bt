// Copyright (c) 2023-present Lukas Neubert and contributors (see AUTHORS.md).
// This Source Code Form is subject to the terms of the Mozilla Public License 2.0.
package builtin

pub fun i8(n #JS.Any) i8 {
	return #JS.'Math.floor(n)' as i8
}

pub fun i16(n #JS.Any) i16 {
	return #JS.'Math.floor(n)' as i16
}

pub fun i32(n #JS.Any) i32 {
	return #JS.'Math.floor(n)' as i32
}

pub fun i64(n #JS.Any) i64 {
	return #JS.'Math.floor(n)' as i64
}

pub fun u8(v #JS.Any) u8 {
	// Note: Bait does not support typeof for JS types
	// TODO implement this?
	if #JS.'typeof(v) == "string"' as bool {
		return #JS.'v.charCodeAt(0)' as u8
	}
	// TODO this could probably be changed to Bait `v is string` and string indexing
	if #JS.'v instanceof string' as bool {
		return #JS.'v.str.charCodeAt(0)' as u8
	}
	return #JS.'Math.floor(v)' as u8
}

pub fun u16(n #JS.Any) u16 {
	return #JS.'Math.floor(n)' as u16
}

pub fun u32(n #JS.Any) u32 {
	return #JS.'Math.floor(n)' as u32
}

pub fun u64(n #JS.Any) u64 {
	return #JS.'Math.floor(n)' as u64
}

pub fun (n i8) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n i16) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n i32) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n i64) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n u8) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n u16) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n u32) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (n u64) str() string {
	return from_js_string(#JS.'n.toString()' as #JS.String)
}

pub fun (c u8) is_capital() bool {
	return c >= `A` and c <= `Z`
}

pub fun (c u8) ascii() string {
	return from_js_string(#JS.'String.fromCharCode(c)' as #JS.String)
}
