// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package builtin

pub fun (s string) all_before(search string) string {
	idx := s.index(search)
	if idx == -1 {
		return s
	}
	return s.substr(0, idx)
}

pub fun (s string) all_before_last(search string) string {
	idx := s.index_last(search)
	if idx == -1 {
		return s
	}
	return s.substr(0, idx)
}

pub fun (s string) all_after(search string) string {
	idx := s.index(search)
	if idx == -1 {
		return s
	}
	return s.substr(idx + 1, s.length)
}

pub fun (s string) all_after_last(search string) string {
	idx := s.index_last(search)
	if idx == -1 {
		return s
	}
	return s.substr(idx + 1, s.length)
}

pub fun (s string) trim_left(cutset string) string {
	mut pos := 0
	for pos < s.length {
		mut found := false
		for c in cutset {
			if s[pos] == c {
				found = true
				break
			}
		}

		if not found {
			break
		}

		pos += 1
	}

	return s.substr(pos, s.length)
}

pub fun (s string) trim_right(cutset string) string {
	mut pos := s.length - 1
	for pos >= 0 {
		mut found := false
		for c in cutset {
			if s[pos] == c {
				found = true
				break
			}
		}

		if not found {
			break
		}

		pos -= 1
	}

	return s.substr(0, pos + 1)
}
