// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package builtin

global test_runner := TestRunner{}

struct TestRunner{
	mut passes i32
	mut fails i32
	mut file string
	mut fun_name string
	mut line i32
	mut expr_string string
	mut exp_val string
	mut got_val string
}

fun (mut tr TestRunner) set_test_info(file string, name string) {
	tr.file = file
	tr.fun_name = name
}

fun (mut tr TestRunner) set_assert_info(line i32, expr_string string, exp string, got string) {
	tr.line = line
	tr.expr_string = expr_string
	tr.exp_val = exp
	tr.got_val = got
}

fun (mut tr TestRunner) assert_pass() {
	tr.passes += 1
}

fun (mut tr TestRunner) assert_fail() {
	tr.fails += 1
	eprintln('${tr.file}:${tr.line} ${tr.fun_name}')
	eprintln(tr.expr_string)
}

fun (mut tr TestRunner) assert_fail_infix() {
	tr.fails += 1
	eprintln('${tr.file}:${tr.line} ${tr.fun_name}')
	eprintln(tr.expr_string)
	eprintln('  left:  ${tr.exp_val}')
	eprintln('  right: ${tr.got_val}')
}

fun (tr TestRunner) exit_code() i32 {
	if tr.fails > 0 {
		return 1
	}
	return 0
}
