// SPDX-FileCopyrightText: Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MIT
package os

pub fun walk_ext(basedir string, ext string) []string {
	mut ext_files := []string
	all_files := ls(basedir)
	for file in all_files {
		fpath := join_path(basedir, [file])
		if is_dir(fpath) {
			tmp := walk_ext(fpath, ext)
			ext_files.push_many(tmp)
		} else if fpath.ends_with(ext) {
			ext_files.push(fpath)
		}
	}
	return ext_files
}

pub fun dir(path string) string {
	mut other_sep := '\\'
	if PATH_SEP != '/' {
		other_sep = '/'
	}
	p := path.replace(other_sep, PATH_SEP)

	pos := p.index_last(PATH_SEP)
	if pos == -1 {
		return '.'
	}

	if pos == 0 and PATH_SEP == '/' {
		return '/'
	}

	return path.substr(0, pos).trim_right(PATH_SEP)
}

// Returns whether a given path exists and is a directory.
pub fun exists_dir(path string) bool {
	return exists(path) and is_dir(path)
}
