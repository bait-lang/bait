// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MIT
package testing

import os

pub enum BuildTarget {
	all
	files
	dirs
}

pub struct BuildRunner{
	root string
	pub mut oks i32
	pub mut fails i32
	pub mut targets BuildTarget
	pub mut dir_suffix string
	global cmd_options string
}

pub fun (mut runner BuildRunner) build_single(name string) {
	cmd := 'node ${$BAITEXE} ${runner.cmd_options} ${runner.root}/${name}'
	code := os.system(cmd)

	if code == 0 {
		println('OK ${name}')
		runner.oks += 1
		return
	}

	eprintln('FAIL ${name}')
	runner.fails += 1
}

pub fun (mut runner BuildRunner) build_all_in_root() {
	paths := os.ls(runner.root)
	for path in paths {
		if path.ends_with('.bt') {
			if runner.targets != .dirs {
				runner.build_single(path)
			}
		} else if runner.targets != .files {
			if os.is_dir(runner.root + '/' + path) {
				runner.build_single(path + runner.dir_suffix)
			}
		}
	}
}
