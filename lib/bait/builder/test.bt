// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package builder

import os
import bait.preference

fun collect_test_files(path string) []string {
	if os.exists(path) and path.ends_with('.bt') and path.contains('_test.') {
		return [path]
	}

	if os.exists_dir(path){
		return os.walk_ext(path, '.bt').filter(fun (f string) bool {
			return f.contains('_test.') and not f.contains('.in.')
		})
	}


	eprintln('Unrecognized test file or directory: "${path}"')
	exit(1)
}

pub fun run_tests(prefs preference.Prefs) i32 {
	mut test_prefs := prefs
	mut has_fails := false

	// Compile and run all tests
	files_to_test := collect_test_files(prefs.command)
	for i, file in files_to_test {
		test_prefs.command = file
		if prefs.backend == .js {
			test_prefs.out_name = os.join_path(os.tmp_dir(), ['test_${i}.js'])
		} else {
			test_prefs.out_name = os.join_path(os.tmp_dir(), ['test_${i}'])
		}
		res := compile(test_prefs)
		if res == 0 {
			println('OK ${file}')
		} else {
			has_fails = true
			println('FAIL ${file}')
		}
	}

	if has_fails {
		return 1
	}
	return 0
}
