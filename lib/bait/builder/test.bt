// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package builder

import os
import bait.preference

pub fun run_tests(prefs preference.Prefs) i32 {
	// Collect test files
	mut files_to_test := []string
	for a in prefs.args {
		if os.exists(a) and a.ends_with('.bt') and a.contains('_test.') {
			files_to_test.push(a)
		} else if os.exists_dir(a){
			t := os.walk_ext(a, '.bt').filter(fun (f string) bool {
				return f.contains('_test.') and not f.contains('.in.')
			})
			files_to_test.push_many(t)
		} else {
			eprintln('Unrecognized test file or directory: "${a}"')
			exit(1)
		}
	}

	mut test_prefs := prefs
	mut has_fails := false

	// Compile and run all tests
	for i, file in files_to_test {
		test_prefs.command = file
		test_prefs.out_name = os.join_path(os.tmp_dir(), ['test_${i}.js'])
		res := compile(test_prefs)
		if res == 0 {
			println('OK ${file}')
		} else {
			has_fails = true
			println('FAIL ${file}')
		}
	}

	if has_fails {
		return 1
	}
	return 0
}
