// Copyright (c) 2023-present Lukas Neubert and contributors (see AUTHORS.md).
// This Source Code is subject to the terms of the Mozilla Public License 2.0.
package c

import bait.ast
import bait.errors

fun (g Gen) expr(expr ast.Expr) {
	match expr {
		ast.CallExpr { g.call_expr(expr) }
		else {}
	}
}

fun (g Gen) call_expr(node ast.CallExpr) {
	// TODO method
	if node.lang == .bait{
		g.write(c_name(node.name))
	} else {
		g.write(node.name.replace('C.', ''))
	}
	// TODO println
	g.write('(')
	// TODO method receiver
	g.call_args(node.args)
	g.write(')')
}

fun (g Gen) call_args(args []ast.CallArg) {
	for i, a in args {
		g.expr(a.expr)
		if i < args.length - 1 {
			g.write(", ")
		}
	}
}
