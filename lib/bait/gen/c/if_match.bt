// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package c

import bait.ast

fun (mut g Gen) if_match(node ast.IfMatch, is_expr bool) {
	tmp := g.new_temp_var()
	mut cut := ''
	if is_expr {
		cut = g.cut_before(`\n`).trim_left('\t')
		g.writeln('')
		typ := g.typ(node.typ)
		g.writeln('${typ} ${tmp};')
	}

	for i, b in node.branches {
		if i > 0 {
			g.write('} else ')
		}
		if node.has_else and i == node.branches.length - 1 {
			g.writeln('{')
		} else {
			g.write('if (')
			g.expr(b.cond)
			g.writeln(') {')
		}
		g.stmts(b.stmts)

		if is_expr {
			mut branch_cut := g.cut_before(`\n`)
			branch_cut = g.cut_before(`\t`)
			g.empty_line = false
			g.writeln('\t${tmp} = ${branch_cut};')
		}
	}
	g.writeln('}')

	if is_expr {
		g.write(cut)
		g.write(tmp)
	}
}
