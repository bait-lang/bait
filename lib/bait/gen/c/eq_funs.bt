// Copyright (c) 2023-present Lukas Neubert and contributors (see AUTHORS.md).
// This Source Code is subject to the terms of the Mozilla Public License 2.0.
package c

import bait.ast
import bait.errors

fun (g Gen) gen_equality_funs() {
	for typ in g.table.needed_equality_funs {
		g.equality_fun(typ)
	}
}

fun (g Gen) equality_fun(typ ast.Type) string {
	sym := g.table.get_sym(typ)
	if sym.kind == .other {
		// Simple builtin types have this type. They don't need an equality function
		return ''
	}

	// Equality is manually defined as overload
	if sym.overloads.contains('==') {
		return ''
	}

	errors.generic_error('cannot generate equality function for type ${sym.name}')
	exit(1)
}
