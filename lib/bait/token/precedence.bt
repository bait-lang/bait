// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package token

pub enum Precedence {
	lowest
	cond
	compare
	as_is
	sum
	product
	prefix
	call
	index
}

pub fun (t TokenKind) precedence() Precedence {
	return match t {
		.lsqr {
			Precedence.index
		}
		.dot {
			.call
		}
		.key_not, .caret {
			.prefix
		}
		.mul, .div, .mod {
			.product
		}
		.plus, .minus {
			.sum
		}
		.eq, .ne, .lt, .gt, .le, .ge {
			.compare
		}
		.key_as, .key_is {
			.as_is
		}
		.key_and, .key_or {
			.cond
		}
		else {
			.lowest
		}
	}
}
