// Copyright (c) 2023-present Lukas Neubert and contributors (see AUTHORS.md).
// This Source Code is subject to the terms of the Mozilla Public License 2.0.
package main

import os

const GIT_USER := 'tiabeast-bot'
const GIT_MAIL := '131296262+tiabeast-bot@users.noreply.github.com'

const MAIN_REPO_COMMIT_URL := 'https://github.com/tiabeast/bait/commit'

// Exit if not in CI because gen-baitjs is only meant for use in GH Actions
fun ci_or_exit() {
	if os.getenv('CI') != 'true' {
		eprintln('gen-baitjs is only meant to be run in CI.')
		exit(1)
	}
}

fun main() {
	ci_or_exit()

	println('Configuring git user...')
	os.system('git config --global user.name "${GIT_USER}"')
	os.system('git config --global user.email "${GIT_MAIL}"')

	baitjs_dir := os.join_path(os.home_dir(), ['.bait', 'baitjs'])
	os.rmdir_all(baitjs_dir)

	access_token := os.getenv('TIABEAST_BOT_TOKEN')
	os.system('git clone --depth 1 https://${GIT_USER}:${access_token}@github.com/tiabeast/baitjs.git ${baitjs_dir}')

	println('Building bait.js...')
	res := os.exec('node bait.js cli/bait.bt -o ${baitjs_dir}/bait.js')
	if res.code != 0 {
		eprintln('Failed to build bait.js.')
		exit(1)
	}

	// Sanity check for a reasonable file size
	lines := os.read_lines('bait.js')
	if lines < 4000 {
		eprintln('bait.js is too small. Something went wrong.')
		exit(1)
	}

	// Stage changes and check if there are any
	os.system('git -C ${baitjs_dir} add .')
	has_changes := os.system('git -C ${baitjs_dir} diff-index --quiet HEAD')
	if has_changes == 0 {
		println('No changes to commit.')
		exit(0)
	}

	// Get information about the current bait commit
	println('Collecting bait commit details...')
	branch := os.exec('git rev-parse --abbrev-ref HEAD').stdout.trim_space()
	commit_hash := os.exec('git rev-parse HEAD').stdout.trim_space()
	short_hash := commit_hash.substr(0, 7)
	original_msg := os.exec('git log -1 --oneline --pretty="%s" HEAD').stdout.trim_space()

	// Commit and push changes to baitjs
	println('Pushing to baitjs...')
	commit_msg := '[bait:${branch}] ${short_hash} - ${original_msg} \n\n${MAIN_REPO_COMMIT_URL}/${commit_hash}'
	os.chdir(baitjs_dir)
	os.system('git commit -m "${commit_msg}"')
	os.system('git pull --rebase')
	os.system('git push')
}
