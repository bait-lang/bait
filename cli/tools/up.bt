// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MPL-2.0
package main

import bait.util.version
import os

fun main() {
	is_verbose := os.ARGS.contains('-v') or os.ARGS.contains('--verbose')
	println('Updating Bait...')

	os.chdir($BAITDIR)

	pull_res := os.exec('git pull https://github.com/bait-lang/bait main')
	if pull_res.code != 0 {
		println('git pull failed.')
		println(pull_res.stderr)
		exit(1)
	}
	if pull_res.stdout.contains('Already up to date.') {
		println('Bait ${version.FULL_VERSION} is up to date.')
		return
	}
	if is_verbose {
		println(pull_res.stdout)
	}

	// Recompile Bait
	self_res := os.exec('node ${$BAITEXE} self')
	if self_res.code == 0 {
		new_version := os.exec('node ${$BAITEXE} version').stdout.trim_space()
		println('Bait updated successfully to ${new_version}.')
		return
	}

	// In case of failure, try make
	println('"bait self" failed, running make...')
	make_cmd := if os.platform() == 'linux' {
		'./make.sh'
	} else {
		'./make.bat'
	}
	make_res := os.system(make_cmd)
	if make_res != 0 {
		exit(1)
	}
}
