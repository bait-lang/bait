// SPDX-FileCopyrightText: 2023-present Lukas Neubert <lukas.neubert@proton.me>
// SPDX-License-Identifier: MIT

enum Color {
	red
	green
	blue
	yellow := 10
	magenta
}

fun get_blue() Color {
	return .blue
}

fun set_color(c Color, val i32) {}

struct Car {
	name string
	color Color
}

fun test_assign() {
	mut c := Color.green

	c = Color.blue
	assert c == .blue // Also ensures infix works

	c = .red
	assert c == Color.red // Makes sure infix works with full syntax too
}

fun test_default_values() {
	assert Color.blue as i32 == 2
	assert Color.yellow as i32 == 10
	assert Color.magenta as i32 == 11
}

fun test_return() {
	b := get_blue()
	assert b == .blue
}

fun test_match() {
	mut n := 0
	c := Color.green
	match c {
		.green { n += 1 }
		Color.blue { assert false }
		else { assert false }
	}
	assert n == 1
}

fun test_array_init() {
	arr := [Color.blue, .green, .red]
}

fun test_struct_init() {
	mycar := Car{
		name = 'Reliant Robin'
		color = .red
	}
}

fun test_fun_call() {
	set_color(Color.red, 255)
	set_color(.green, 0)
}
